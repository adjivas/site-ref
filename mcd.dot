graph siteRef {
  //! `dot -Tpng > mcd.png mcd.dot`

	splines = true;
	overlap = scalexy;
	node [fontsize = 11];

	/// Table

	nodeTablePaper [label = "{
		Paper
			|
				name (string)\l
				description (string)\l
				published (date)\l
				diagnostic (Diagnostic)\l
				proposition (Proposition)\l
	}", shape=record];

	nodeTableStructure [label = "{
		Structure
		  |
				name (string)\l
				juridical: (Juridical)\l
				description (string)\l
                                address (string)\l
				longitude (int)\l
				latitude (int)\l
				email (string)\l
				phone (string)\l
				departement (Departement)\l
				proposition (Proposition)\l
	}", shape=record];

	nodeTableJuridical [label = "{
		Juridical
		  |
				name (string)\l
	}", shape=record];

	nodeTableDepartement [label = "{
		Departement
		  |
				name (string)\l
	}", shape=record];

	nodeTableProject [label = "{
		Project
		  |
				name (string)\l
				author (Author)\l
				link (string)\l
				notation (int)\l
				interoperable (bool)\l
				customizable (bool)\l
				relation (Relation)\l
				usability (Usability)\l
				proposition (Proposition)\l
	}", shape=record];

	nodeTableAuthor [label = "{
		Author
			|
				name (string)\l
				email (string)\l
				link (string)\l
	}", shape=record];

	nodeTableRelation [label = "{
		Relation
			|
				name (string)\l
	}", shape=record];

	nodeTableUsability [label = "{
		Usability
			|
				name (string)\l
	}", shape=record];

	nodeTableProposition [label = "{
		Proposition
			|
				published (date)\l
				message (text)\l
				reply (text)\l
				user (User)\l
				admin (Admin)\l
				approved (bool)\l
	}", shape=record];

	nodeTableDiagnostic [label = "{
		Diagnostic
			|
				name (string)\l
				description (text)\l
				help (string)\l
				adult (bool)\l
				dependency (Diagnostic)\l
				departement (Departement)\l
	}", shape=record];

	nodeTableUser [label = "{
		User
			|
				pseudonym (string)\l
				link (string)\l
				email (string)\l
				password (string)\l
	}", shape=record];

    nodeTablePatient [label = "{
		Patient
		    |
			    pseudonym (string)\l
				gender (int)\l
				birthdate (date)\l
				begin (date)\l
				end (date)\l
				departement (Departement)\l
				diagnostic (Diagnostic)\l
                scolarisation (int)\l
                mdph (int)\l
                helpHome (int)\l
	}", shape=record];

	/// Relation

	nodeRelationPaperDiagnostic [label = "{PaperDiagnostic}", shape = Mrecord];
	nodeRelationPaperProposition [label = "{PaperProposition}", shape = Mrecord];
	nodeRelationStructureJuridical [label = "{StructureJuridical}", shape = Mrecord];
	nodeRelationStructureDepartement [label = "{StructureDepartement}", shape = Mrecord];
	nodeRelationStructureProposition [label = "{StructureProposition}", shape = Mrecord];
	nodeRelationProjectRelation [label = "{Relation}", shape = Mrecord];
	nodeRelationProjectUsability [label = "{Usability}", shape = Mrecord];
	nodeRelationProjectProposition [label = "{ProjectProposition}", shape = Mrecord];
	nodeRelationProjectAuthor [label = "{ProjectAuthor}", shape = Mrecord];
	nodeRelationDiagnosticDiagnostic [label = "{DiagnosticDiagnostic}", shape = Mrecord];
	nodeRelationDiagnosticDepartement [label = "{DiagnosticDepartement}", shape = Mrecord];
	nodeRelationPatientDepartement [label = "{PatientDepartement}", shape = Mrecord];
	nodeRelationPatientDiagnostic [label = "{PatientDiagnostic}", shape = Mrecord];
	nodeRelationUserPatient [label = "{UserPatient}", shape = Mrecord];

	/// Cardinality

	nodeTablePaper -- nodeRelationPaperDiagnostic [headlabel = "0,n", labeldistance = 3];
	nodeRelationPaperDiagnostic -- nodeTableDiagnostic [headlabel = "0,n", labeldistance = 3];
	nodeTablePaper -- nodeRelationPaperProposition [headlabel = "1,1", labeldistance = 3];
	nodeRelationPaperProposition -- nodeTableProposition [headlabel = "0,1", labeldistance = 3];
	nodeTableStructure -- nodeRelationStructureJuridical [headlabel = "1,1", labeldistance = 3];
	nodeRelationStructureJuridical -- nodeTableJuridical [headlabel = "0,n", labeldistance = 3];
	nodeTableStructure -- nodeRelationStructureDepartement [headlabel = "1,1", labeldistance = 3];
	nodeRelationStructureDepartement -- nodeTableDepartement [headlabel = "0,n", labeldistance = 3];
	nodeTableStructure -- nodeRelationStructureProposition [headlabel = "1,1", labeldistance = 3];
	nodeRelationStructureProposition -- nodeTableProposition [headlabel = "0,1", labeldistance = 3];
	nodeTableProject -- nodeRelationProjectRelation [headlabel = "1,n", labeldistance = 3];
	nodeRelationProjectRelation -- nodeTableRelation [headlabel = "0,n", labeldistance = 3];
	nodeTableProject -- nodeRelationProjectUsability [headlabel = "1,1", labeldistance = 3];
	nodeRelationProjectUsability -- nodeTableUsability [headlabel = "0,n", labeldistance = 3];
	nodeTableProject -- nodeRelationProjectProposition [headlabel = "1,1", labeldistance = 3];
	nodeRelationProjectProposition -- nodeTableProposition [headlabel = "0,1", labeldistance = 3];
	nodeTableProject -- nodeRelationProjectAuthor [headlabel = "0,n", labeldistance = 3];
	nodeRelationProjectAuthor -- nodeTableAuthor [headlabel = "1,n", labeldistance = 3];
	nodeTableDiagnostic -- nodeRelationDiagnosticDiagnostic [headlabel = "0,n", labeldistance = 3];
	nodeRelationDiagnosticDiagnostic -- nodeTableDiagnostic [headlabel = "0,n", labeldistance = 3];
	nodeTableDiagnostic -- nodeRelationDiagnosticDepartement [headlabel = "0,n", labeldistance = 3];
	nodeRelationDiagnosticDepartement -- nodeTableDepartement [headlabel = "0,n", labeldistance = 3];
	nodeTablePatient -- nodeRelationPatientDepartement [headlabel = "0,n", labeldistance = 3];
	nodeRelationPatientDepartement -- nodeTableDepartement [headlabel = "0,n", labeldistance = 3];
	nodeTablePatient -- nodeRelationPatientDiagnostic [headlabel = "0,1", labeldistance = 3];
	nodeRelationPatientDiagnostic -- nodeTableDiagnostic [headlabel = "0,n", labeldistance = 3];
	nodeTableUser -- nodeRelationUserPatient [headlabel = "0,n", labeldistance = 3];
	nodeRelationUserPatient -- nodeTablePatient [headlabel = "1,1", labeldistance = 3];
}
